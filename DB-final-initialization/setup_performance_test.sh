#!/bin/bash
# Script de configuraci√≥n para el entorno de medici√≥n de rendimiento
# Fredys Food Database Performance Testing

echo "üîß CONFIGURANDO ENTORNO DE MEDICI√ìN DE RENDIMIENTO"
echo "=================================================="

# Verificar Python
echo "üêç Verificando Python..."
if command -v python3 &> /dev/null; then
    python_version=$(python3 --version)
    echo "‚úÖ $python_version encontrado"
else
    echo "‚ùå Python 3 no encontrado. Por favor instale Python 3.7 o superior"
    exit 1
fi

# Verificar PostgreSQL
echo ""
echo "üêò Verificando PostgreSQL..."
if command -v psql &> /dev/null; then
    pg_version=$(psql --version)
    echo "‚úÖ $pg_version encontrado"
else
    echo "‚ùå PostgreSQL no encontrado. Por favor instale PostgreSQL"
    exit 1
fi

# Instalar dependencias Python
echo ""
echo "üì¶ Instalando dependencias Python..."
if pip3 install -r requirements.txt; then
    echo "‚úÖ Dependencias instaladas correctamente"
else
    echo "‚ùå Error instalando dependencias"
    exit 1
fi

# Verificar conexi√≥n a PostgreSQL
echo ""
echo "üîå Verificando conexi√≥n a PostgreSQL..."

# Intentar conectar con las credenciales por defecto
if psql -h localhost -U postgres -d postgres -c "SELECT 1;" &> /dev/null; then
    echo "‚úÖ Conexi√≥n a PostgreSQL exitosa"
else
    echo "‚ö†Ô∏è  No se puede conectar a PostgreSQL con las credenciales por defecto"
    echo "   Por favor verifique que PostgreSQL est√© ejecut√°ndose"
    echo "   y que las credenciales en measure_performance.py sean correctas"
fi

# Verificar si existe la base de datos
echo ""
echo "üóÑÔ∏è  Verificando base de datos final_project..."
if psql -h localhost -U postgres -d final_project -c "SELECT 1;" &> /dev/null; then
    echo "‚úÖ Base de datos 'final_project' encontrada"
else
    echo "‚ö†Ô∏è  Base de datos 'final_project' no encontrada"
    echo "   Creando base de datos..."
    
    if psql -h localhost -U postgres -c "CREATE DATABASE final_project;" &> /dev/null; then
        echo "‚úÖ Base de datos 'final_project' creada"
    else
        echo "‚ùå Error creando base de datos. Verifique permisos."
    fi
fi

# Verificar esquema
echo ""
echo "üìã Verificando esquema de tablas..."
if psql -h localhost -U postgres -d final_project -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'public';" &> /dev/null; then
    table_count=$(psql -h localhost -U postgres -d final_project -t -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'public';")
    table_count=$(echo $table_count | xargs)  # Trim whitespace
    
    if [ "$table_count" -gt "0" ]; then
        echo "‚úÖ Esquema encontrado ($table_count tablas)"
    else
        echo "‚ö†Ô∏è  No se encontraron tablas. Ejecutando create_schema.sql..."
        if psql -h localhost -U postgres -d final_project -f create_schema.sql &> /dev/null; then
            echo "‚úÖ Esquema creado exitosamente"
        else
            echo "‚ùå Error creando esquema"
        fi
    fi
else
    echo "‚ùå Error verificando esquema"
fi

# Verificar datos
echo ""
echo "üìä Verificando datos en tablas..."
if psql -h localhost -U postgres -d final_project -c "SELECT COUNT(*) FROM Usuario;" &> /dev/null; then
    user_count=$(psql -h localhost -U postgres -d final_project -t -c "SELECT COUNT(*) FROM Usuario;")
    user_count=$(echo $user_count | xargs)
    
    if [ "$user_count" -gt "0" ]; then
        echo "‚úÖ Datos encontrados ($user_count usuarios)"
    else
        echo "‚ö†Ô∏è  No se encontraron datos. Ejecute:"
        echo "     python3 main.py 1000    # Para 1K registros"
        echo "     python3 main.py 10000   # Para 10K registros"
        echo "     python3 main.py 100000  # Para 100K registros"
    fi
else
    echo "‚ùå Error verificando datos"
fi

echo ""
echo "üöÄ CONFIGURACI√ìN COMPLETADA"
echo "=========================="
echo ""
echo "üìö Pasos siguientes:"
echo ""
echo "1. Si no tiene datos, genere datos de prueba:"
echo "   python3 main.py 10000"
echo ""
echo "2. Ejecute el test de rendimiento:"
echo "   python3 measure_performance.py"
echo ""
echo "3. Los resultados se guardar√°n en:"
echo "   - performance_results_[escala].json"
echo "   - performance_tables_[escala].tex"
echo ""
echo "4. Use el archivo .tex para actualizar el documento LaTeX"
echo ""
echo "üéØ Para obtener resultados m√°s robustos, use escalas de datos mayores:"
echo "   - 1K registros: Pruebas r√°pidas"
echo "   - 10K registros: Pruebas est√°ndar"  
echo "   - 100K registros: Pruebas completas"
echo "   - 1M registros: Pruebas de escala empresarial"
